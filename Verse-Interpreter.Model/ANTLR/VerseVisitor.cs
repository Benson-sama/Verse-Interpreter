//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Verse.g4 by ANTLR 4.13.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="VerseParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.0")]
public interface IVerseVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="VerseParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] VerseParser.ProgramContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ifElseExp</c>
	/// labeled alternative in <see cref="VerseParser.e"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfElseExp([NotNull] VerseParser.IfElseExpContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>failExp</c>
	/// labeled alternative in <see cref="VerseParser.e"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFailExp([NotNull] VerseParser.FailExpContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>equalityExp</c>
	/// labeled alternative in <see cref="VerseParser.e"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEqualityExp([NotNull] VerseParser.EqualityExpContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>plusOrMinusExp</c>
	/// labeled alternative in <see cref="VerseParser.e"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPlusOrMinusExp([NotNull] VerseParser.PlusOrMinusExpContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>forExp</c>
	/// labeled alternative in <see cref="VerseParser.e"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForExp([NotNull] VerseParser.ForExpContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>assignmentExp</c>
	/// labeled alternative in <see cref="VerseParser.e"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignmentExp([NotNull] VerseParser.AssignmentExpContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>forDoExp</c>
	/// labeled alternative in <see cref="VerseParser.e"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForDoExp([NotNull] VerseParser.ForDoExpContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>multOrDivExp</c>
	/// labeled alternative in <see cref="VerseParser.e"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultOrDivExp([NotNull] VerseParser.MultOrDivExpContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>choiceExp</c>
	/// labeled alternative in <see cref="VerseParser.e"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitChoiceExp([NotNull] VerseParser.ChoiceExpContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>comparisonExp</c>
	/// labeled alternative in <see cref="VerseParser.e"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComparisonExp([NotNull] VerseParser.ComparisonExpContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>bringIntoScopeExp</c>
	/// labeled alternative in <see cref="VerseParser.e"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBringIntoScopeExp([NotNull] VerseParser.BringIntoScopeExpContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>parenthesisExp</c>
	/// labeled alternative in <see cref="VerseParser.e"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParenthesisExp([NotNull] VerseParser.ParenthesisExpContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>valueApplicationExp</c>
	/// labeled alternative in <see cref="VerseParser.e"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitValueApplicationExp([NotNull] VerseParser.ValueApplicationExpContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>valueExp</c>
	/// labeled alternative in <see cref="VerseParser.e"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitValueExp([NotNull] VerseParser.ValueExpContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>rangeChoiceExp</c>
	/// labeled alternative in <see cref="VerseParser.e"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRangeChoiceExp([NotNull] VerseParser.RangeChoiceExpContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>variableValue</c>
	/// labeled alternative in <see cref="VerseParser.v"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableValue([NotNull] VerseParser.VariableValueContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>hnfValue</c>
	/// labeled alternative in <see cref="VerseParser.v"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHnfValue([NotNull] VerseParser.HnfValueContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>integerHnf</c>
	/// labeled alternative in <see cref="VerseParser.hnf"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntegerHnf([NotNull] VerseParser.IntegerHnfContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>stringHnf</c>
	/// labeled alternative in <see cref="VerseParser.hnf"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringHnf([NotNull] VerseParser.StringHnfContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>tupleHnf</c>
	/// labeled alternative in <see cref="VerseParser.hnf"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTupleHnf([NotNull] VerseParser.TupleHnfContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>lambdaHnf</c>
	/// labeled alternative in <see cref="VerseParser.hnf"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLambdaHnf([NotNull] VerseParser.LambdaHnfContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="VerseParser.string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitString([NotNull] VerseParser.StringContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="VerseParser.content"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitContent([NotNull] VerseParser.ContentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="VerseParser.tuple"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTuple([NotNull] VerseParser.TupleContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="VerseParser.elements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElements([NotNull] VerseParser.ElementsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="VerseParser.lambda"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLambda([NotNull] VerseParser.LambdaContext context);
}
